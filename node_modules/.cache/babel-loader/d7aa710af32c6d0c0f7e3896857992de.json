{"ast":null,"code":"var _jsxFileName = \"/home/programowanie/isaacQuiz/isaac-quiz/src/Quiz/Quiz.js\";\nimport React, { Component } from 'react';\nimport QualityQuestion from './Questions/QualityQuestion.js';\nimport QualityQuestionData from './quizData.js';\nimport QuestionType from './enum.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Quiz extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  generateQuestion(difficulty) {\n    // 718 items as of now\n    // Get random question type\n    let questionType = Math.floor(QuestionType.keys.length * Math.random());\n    let question;\n\n    if (questionType == QuestionType.QualityQuestion) {\n      let question;\n      let answer;\n      let itemId = Math.floor(Math.random() * 718);\n      fetch(`https://www.platynowy-bog.com.pl/api/items/${itemId}`).then(response => response.json()).then(data => {\n        // let questionData = new QualityQuestionData(data.name, data.quality);\n        question = {\n          question: /*#__PURE__*/_jsxDEV(QualityQuestion, {\n            itemName: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this),\n          answer: data.quality\n        };\n      });\n    }\n\n    return question;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(QualityQuestion, {\n        itemName: \"example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/programowanie/isaacQuiz/isaac-quiz/src/Quiz/Quiz.js"],"names":["React","Component","QualityQuestion","QualityQuestionData","QuestionType","Quiz","constructor","props","generateQuestion","difficulty","questionType","Math","floor","keys","length","random","question","answer","itemId","fetch","then","response","json","data","name","quality","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,mBAAP,MAAgC,eAAhC;AACA,OAAOC,YAAP,MAAyB,WAAzB;;AAEA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAC1CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAGD;;AACDC,EAAAA,gBAAgB,CAACC,UAAD,EAAa;AAC3B;AAEA;AACA,QAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWR,YAAY,CAACS,IAAb,CAAkBC,MAAlB,GAA2BH,IAAI,CAACI,MAAL,EAAtC,CAAnB;AACA,QAAIC,QAAJ;;AACA,QAAGN,YAAY,IAAIN,YAAY,CAACF,eAAhC,EAAiD;AAC/C,UAAIc,QAAJ;AACA,UAAIC,MAAJ;AACA,UAAIC,MAAM,GAAGP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACI,MAAL,KAAgB,GAA3B,CAAb;AACAI,MAAAA,KAAK,CAAE,8CAA6CD,MAAO,EAAtD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ;AACAP,QAAAA,QAAQ,GAAG;AACTA,UAAAA,QAAQ,eAAE,QAAC,eAAD;AAAiB,YAAA,QAAQ,EAAEO,IAAI,CAACC;AAAhC;AAAA;AAAA;AAAA;AAAA,kBADD;AAETP,UAAAA,MAAM,EAAEM,IAAI,CAACE;AAFJ,SAAX;AAID,OARD;AASD;;AAED,WAAOT,QAAP;AAGD;;AACDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,eAAD;AAAiB,QAAA,QAAQ,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AArCyC","sourcesContent":["import React, { Component } from 'react'\nimport QualityQuestion from './Questions/QualityQuestion.js';\nimport QualityQuestionData from './quizData.js';\nimport QuestionType from './enum.js';\n\nexport default class Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    \n  }\n  generateQuestion(difficulty) {\n    // 718 items as of now\n    \n    // Get random question type\n    let questionType = Math.floor(QuestionType.keys.length * Math.random())\n    let question;\n    if(questionType == QuestionType.QualityQuestion) {\n      let question;\n      let answer;\n      let itemId = Math.floor(Math.random() * 718);\n      fetch(`https://www.platynowy-bog.com.pl/api/items/${itemId}`)\n      .then(response => response.json())\n      .then(data => {\n        // let questionData = new QualityQuestionData(data.name, data.quality);\n        question = {\n          question: <QualityQuestion itemName={data.name}></QualityQuestion>,\n          answer: data.quality\n        }\n      });\n    }\n\n    return question;\n\n    \n  }\n  render() {\n    return (\n      <div>\n        <QualityQuestion itemName=\"example\"></QualityQuestion>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}