{"ast":null,"code":"var _jsxFileName = \"/home/programowanie/isaacQuiz/isaac-quiz/src/Quiz/Answers.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Answers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.answer = this.answer.bind(this);\n    this.props.answers.forEach((el, i) => {\n      if (el == this.props.correctAnswer) this.state.correctAnswerIndex = i;\n    });\n  } // Checks if the answer is correct, colors the wrong and correct answers by referencing them by their index in the array/map\n\n\n  answer(selectedAns, index) {\n    if (selectedAns == this.props.correctAnswer) {\n      this.setState({\n        correctSelectedIndex: this.state.correctAnswerIndex\n      });\n      this.props.answerFunc(true);\n    } else {\n      this.setState({\n        wrongSelectedIndex: index,\n        correctSelectedIndex: this.state.correctAnswerIndex\n      });\n      this.props.answerFunc(false);\n    } // Resets the coloring after the fade out\n\n\n    setTimeout(() => {\n      this.setState({\n        wrongSelectedIndex: null,\n        correctSelectedIndex: null\n      });\n    }, 700);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"answers\",\n      children: this.props.answers.map((el, i) => {\n        let className = \"\";\n        if (this.state.correctSelectedIndex == i) className = \"correct\";\n        if (this.state.wrongSelectedIndex == i) className = \"wrong\";\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.answer(el, i),\n          className: `${className} answerButton`,\n          children: el\n        }, el, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/programowanie/isaacQuiz/isaac-quiz/src/Quiz/Answers.js"],"names":["React","Component","Answers","constructor","props","state","answer","bind","answers","forEach","el","i","correctAnswer","correctAnswerIndex","selectedAns","index","setState","correctSelectedIndex","answerFunc","wrongSelectedIndex","setTimeout","render","map","className"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,eAAe,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC3CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKH,KAAL,CAAWI,OAAX,CAAmBC,OAAnB,CAA2B,CAACC,EAAD,EAAKC,CAAL,KAAW;AAClC,UAAGD,EAAE,IAAI,KAAKN,KAAL,CAAWQ,aAApB,EAAmC,KAAKP,KAAL,CAAWQ,kBAAX,GAAgCF,CAAhC;AACtC,KAFD;AAGH,GAT0C,CAU3C;;;AACAL,EAAAA,MAAM,CAACQ,WAAD,EAAcC,KAAd,EAAqB;AACvB,QAAGD,WAAW,IAAI,KAAKV,KAAL,CAAWQ,aAA7B,EAA4C;AACxC,WAAKI,QAAL,CAAc;AACVC,QAAAA,oBAAoB,EAAE,KAAKZ,KAAL,CAAWQ;AADvB,OAAd;AAGA,WAAKT,KAAL,CAAWc,UAAX,CAAsB,IAAtB;AACH,KALD,MAMK;AACD,WAAKF,QAAL,CAAc;AACVG,QAAAA,kBAAkB,EAAEJ,KADV;AAEVE,QAAAA,oBAAoB,EAAE,KAAKZ,KAAL,CAAWQ;AAFvB,OAAd;AAIA,WAAKT,KAAL,CAAWc,UAAX,CAAsB,KAAtB;AACH,KAbsB,CAcvB;;;AACAE,IAAAA,UAAU,CAAC,MAAM;AACb,WAAKJ,QAAL,CAAc;AACVG,QAAAA,kBAAkB,EAAE,IADV;AAEVF,QAAAA,oBAAoB,EAAE;AAFZ,OAAd;AAIH,KALS,EAKP,GALO,CAAV;AAMH;;AACDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,gBAEA,KAAKjB,KAAL,CAAWI,OAAX,CAAmBc,GAAnB,CAAuB,CAACZ,EAAD,EAAKC,CAAL,KAAW;AAC9B,YAAIY,SAAS,GAAG,EAAhB;AACA,YAAG,KAAKlB,KAAL,CAAWY,oBAAX,IAAmCN,CAAtC,EACIY,SAAS,GAAG,SAAZ;AACJ,YAAG,KAAKlB,KAAL,CAAWc,kBAAX,IAAiCR,CAApC,EACIY,SAAS,GAAG,OAAZ;AAEJ,4BACI;AAEA,UAAA,OAAO,EAAE,MAAM,KAAKjB,MAAL,CAAYI,EAAZ,EAAgBC,CAAhB,CAFf;AAGA,UAAA,SAAS,EAAG,GAAEY,SAAU,eAHxB;AAAA,oBAIEb;AAJF,WACKA,EADL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OAdD;AAFA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBL;;AAvD4C","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Answers extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {}\n        this.answer = this.answer.bind(this);\n        this.props.answers.forEach((el, i) => {\n            if(el == this.props.correctAnswer) this.state.correctAnswerIndex = i;\n        });\n    }\n    // Checks if the answer is correct, colors the wrong and correct answers by referencing them by their index in the array/map\n    answer(selectedAns, index) {\n        if(selectedAns == this.props.correctAnswer) {\n            this.setState({\n                correctSelectedIndex: this.state.correctAnswerIndex\n            })\n            this.props.answerFunc(true);\n        }\n        else {\n            this.setState({\n                wrongSelectedIndex: index,\n                correctSelectedIndex: this.state.correctAnswerIndex\n            })\n            this.props.answerFunc(false);\n        }\n        // Resets the coloring after the fade out\n        setTimeout(() => {\n            this.setState({\n                wrongSelectedIndex: null,\n                correctSelectedIndex: null\n            })\n        }, 700)\n    }\n    render() {\n        return (\n            <div id=\"answers\">\n            {\n            this.props.answers.map((el, i) => {\n                let className = \"\";\n                if(this.state.correctSelectedIndex == i)\n                    className = \"correct\"\n                if(this.state.wrongSelectedIndex == i)\n                    className = \"wrong\"\n            \n                return (\n                    <button\n                    key={el}\n                    onClick={() => this.answer(el, i)}\n                    className={`${className} answerButton` }\n                    >{el}</button>\n                )\n            })\n            }\n            </div>\n        )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}