{"ast":null,"code":"var _jsxFileName = \"/home/programowanie/isaacQuiz/isaac-quiz/src/Quiz/Quiz.js\";\nimport React, { Component } from 'react';\nimport { QualityQuestion } from './Questions/questionsComponents.js';\nimport QualityQuestionData from './quizData.js';\nimport QuestionType from './enum.js';\nimport { generateQuestion, generateMultipleQuestions } from './generateQuestion.js';\nimport Answers from './Answers.js';\nimport StartView from '../StartView.js';\nimport update from 'immutability-helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quizStarted: false,\n      currentQuestion: 0,\n      questions: []\n    };\n    this.startFunc = this.startFunc.bind(this);\n    this.answer = this.answer.bind(this);\n  }\n\n  startFunc() {\n    // Generate the questions\n    generateMultipleQuestions(10).then(questions => {\n      console.log(questions);\n      this.setState({\n        quizStarted: true,\n        questions: questions\n      });\n    });\n  }\n\n  answer(correct) {\n    if (correct) {\n      // Add an answered correctly flag to the current question\n      let newQuestions = { ...this.state.questions\n      };\n      newQuestions[this.state.currentQuestion].answeredCorrectly = true;\n      this.setState({\n        questions: newQuestions\n      });\n    } // Move to the next question, fade out and in\n    // Similiar function in Answers Component\n\n\n    document.getElementById(\"quiz\").style.opacity = 0;\n    setTimeout(() => {\n      this.setState({\n        currentQuestion: this.state.currentQuestion + 1\n      });\n      document.getElementById(\"quiz\").style.opacity = \"100%\";\n    }, 700);\n  }\n\n  render() {\n    let currentQuestion = { ...this.state.questions[this.state.currentQuestion]\n    };\n    console.log(currentQuestion.answers);\n    return this.state.quizStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quiz\",\n      children: [currentQuestion.question, /*#__PURE__*/_jsxDEV(Answers, {\n        answers: currentQuestion.answers,\n        correctAnswer: currentQuestion.correctAnswer,\n        answerFunc: this.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(StartView, {\n      startFunc: this.startFunc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/programowanie/isaacQuiz/isaac-quiz/src/Quiz/Quiz.js"],"names":["React","Component","QualityQuestion","QualityQuestionData","QuestionType","generateQuestion","generateMultipleQuestions","Answers","StartView","update","Quiz","constructor","props","state","quizStarted","currentQuestion","questions","startFunc","bind","answer","then","console","log","setState","correct","newQuestions","answeredCorrectly","document","getElementById","style","opacity","setTimeout","render","answers","question","correctAnswer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,eAAR,QAA8B,oCAA9B;AACA,OAAOC,mBAAP,MAAgC,eAAhC;AACA,OAAOC,YAAP,MAAyB,WAAzB;AACA,SAAQC,gBAAR,EAA0BC,yBAA1B,QAA0D,uBAA1D;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,eAAe,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AAC1CU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,KADF;AAEXC,MAAAA,eAAe,EAAE,CAFN;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAMA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AACDD,EAAAA,SAAS,GAAG;AACV;AACAX,IAAAA,yBAAyB,CAAC,EAAD,CAAzB,CAA8Bc,IAA9B,CAAmCJ,SAAS,IAAI;AAC9CK,MAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACA,WAAKO,QAAL,CAAc;AACZT,QAAAA,WAAW,EAAE,IADD;AAEZE,QAAAA,SAAS,EAAEA;AAFC,OAAd;AAID,KAND;AAOD;;AACDG,EAAAA,MAAM,CAACK,OAAD,EAAU;AACd,QAAGA,OAAH,EAAY;AACV;AACE,UAAIC,YAAY,GAAG,EAAC,GAAG,KAAKZ,KAAL,CAAWG;AAAf,OAAnB;AACAS,MAAAA,YAAY,CAAC,KAAKZ,KAAL,CAAWE,eAAZ,CAAZ,CAAyCW,iBAAzC,GAA6D,IAA7D;AACA,WAAKH,QAAL,CAAc;AACZP,QAAAA,SAAS,EAAES;AADC,OAAd;AAGH,KARa,CAShB;AACA;;;AACEE,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC,CAAsCC,OAAtC,GAAgD,CAAhD;AACAC,IAAAA,UAAU,CAAC,MAAM;AACf,WAAKR,QAAL,CAAc;AACZR,QAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWE,eAAX,GAA6B;AADlC,OAAd;AAGAY,MAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC,CAAsCC,OAAtC,GAAgD,MAAhD;AACD,KALS,EAKP,GALO,CAAV;AAOD;;AACDE,EAAAA,MAAM,GAAG;AACP,QAAIjB,eAAe,GAAG,EAAC,GAAG,KAAKF,KAAL,CAAWG,SAAX,CAAqB,KAAKH,KAAL,CAAWE,eAAhC;AAAJ,KAAtB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,eAAe,CAACkB,OAA5B;AACA,WACE,KAAKpB,KAAL,CAAWC,WAAX,gBACA;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA,iBACGC,eAAe,CAACmB,QADnB,eAEE,QAAC,OAAD;AACA,QAAA,OAAO,EAAEnB,eAAe,CAACkB,OADzB;AAEA,QAAA,aAAa,EAAElB,eAAe,CAACoB,aAF/B;AAGA,QAAA,UAAU,EAAE,KAAKhB;AAHjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAUA,QAAC,SAAD;AACE,MAAA,SAAS,EAAE,KAAKF;AADlB;AAAA;AAAA;AAAA;AAAA,YAXF;AAgBD;;AA9DyC","sourcesContent":["import React, { Component } from 'react'\nimport {QualityQuestion} from './Questions/questionsComponents.js';\nimport QualityQuestionData from './quizData.js';\nimport QuestionType from './enum.js';\nimport {generateQuestion, generateMultipleQuestions} from './generateQuestion.js';\nimport Answers from './Answers.js';\nimport StartView from '../StartView.js';\nimport update from 'immutability-helper';\n\nexport default class Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quizStarted: false,\n      currentQuestion: 0,\n      questions: [],\n    };\n    \n    this.startFunc = this.startFunc.bind(this);\n    this.answer = this.answer.bind(this);\n  }\n  startFunc() {\n    // Generate the questions\n    generateMultipleQuestions(10).then(questions => {\n      console.log(questions)\n      this.setState({\n        quizStarted: true,\n        questions: questions\n      })\n    })\n  }\n  answer(correct) {\n    if(correct) {\n      // Add an answered correctly flag to the current question\n        let newQuestions = {...this.state.questions};\n        newQuestions[this.state.currentQuestion].answeredCorrectly = true;\n        this.setState({\n          questions: newQuestions\n        })\n    }\n  // Move to the next question, fade out and in\n  // Similiar function in Answers Component\n    document.getElementById(\"quiz\").style.opacity = 0;\n    setTimeout(() => {\n      this.setState({\n        currentQuestion: this.state.currentQuestion + 1\n      });\n      document.getElementById(\"quiz\").style.opacity = \"100%\";\n    }, 700)\n    \n  }\n  render() {\n    let currentQuestion = {...this.state.questions[this.state.currentQuestion]};\n    console.log(currentQuestion.answers);\n    return (\n      this.state.quizStarted ?\n      <div id=\"quiz\">\n        {currentQuestion.question}\n        <Answers \n        answers={currentQuestion.answers}\n        correctAnswer={currentQuestion.correctAnswer}\n        answerFunc={this.answer}\n        ></Answers>\n      </div>\n      :\n      <StartView\n        startFunc={this.startFunc}\n      ></StartView>\n      \n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}