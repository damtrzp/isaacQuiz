{"ast":null,"code":"import _asyncToGenerator from\"/home/programowanie/isaacQuiz/isaac-quiz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"/home/programowanie/isaacQuiz/isaac-quiz/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/home/programowanie/isaacQuiz/isaac-quiz/node_modules/@babel/runtime/regenerator/index.js\";import React from\"react\";import{QualityQuestion,ChargeQuestion,CharacterUnlockQuestion,ItemDescriptionQuestion}from\"./Questions/questionsComponents\";import QuestionType from\"./enum\";// Charge question answer formatting\nimport{jsx as _jsx}from\"react/jsx-runtime\";function ChargeAnswer(amount){var unit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"\";var answer=\"\".concat(amount,\" \").concat(unit);answer=answer[0].toUpperCase()+answer.slice(1);return answer;}function shuffledArray(array){var newArray=_toConsumableArray(array);for(var i=newArray.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var temp=newArray[i];newArray[i]=newArray[j];newArray[j]=temp;}return newArray;}var items;var apiUrl=\"\";fetch(\"\".concat(apiUrl,\"/api/items\")).then(function(response){return response.json();}).then(function(data){items=data;});function generateQuestion(){return new Promise(function(resolve,reject){// 718 items as of now\nvar itemsAmount=718;var activeItemIds=[33,34,35,36,37,38,39,40,41,42,44,45,47,49,56,58,65,66,77,78,83,84,85,86,93,97,102,105,107,111,123,124,126,127,130,133,135,136,137,145,146,158,160,164,166,171,175,177,181,186,192,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,323,324,325,326,338,347,348,349,351,352,357,382,383,386,396,406,419,422,427,434,437,439,441,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,504,507,508,510,512,515,516,521,522,523,527,536,540,545,549,550,552,555,556,557,577,578,580,584,585,604,605,609,611,622,623,625,628,631,635,636,639,640,642,650,653,655,685,687,703,705,706,709,710,711,712,713,714,715,719,720,722,723,728,729];var possibleAnswersSeconds=[ChargeAnswer(1,\"s\"),ChargeAnswer(2,\"s\"),ChargeAnswer(3,\"s\"),ChargeAnswer(4,\"s\"),ChargeAnswer(6,\"s\")];var possibleAnswersSecondsSpecial=[ChargeAnswer(7,\"s\"),ChargeAnswer(10,\"s\"),ChargeAnswer(15,\"s\"),ChargeAnswer(16,\"s\")];var possibleAnswersRooms=[ChargeAnswer(1,\"rooms\"),ChargeAnswer(2,\"rooms\"),ChargeAnswer(3,\"rooms\"),ChargeAnswer(4,\"rooms\"),ChargeAnswer(6,\"rooms\"),ChargeAnswer(12,\"rooms\")];// Get random question type\nvar questionType=Math.floor(Object.keys(QuestionType).length*Math.random());// Quality Questions\nif(questionType==QuestionType.QualityQuestion){var itemId=Math.floor(Math.random()*itemsAmount);var itemName=items[itemId].name;var itemQuality=items[itemId].quality;var question={question:/*#__PURE__*/_jsx(QualityQuestion,{itemName:itemName}),correctAnswer:itemQuality,answers:[0,1,2,3,4]};resolve(question);}// Charge Questions\n// TO BE REFACTORISED, THE CODE IS AWFUL RIGHT NOW\nif(questionType==QuestionType.ChargeQuestion){var _itemId=activeItemIds[Math.floor(Math.random()*activeItemIds.length)];fetch(\"\".concat(apiUrl,\"/api/items/\").concat(_itemId)).then(function(response){return response.json();}).then(function(data){var answers=[ChargeAnswer(\"unlimited\"),ChargeAnswer(\"one time use\")];// Randomise different sets of answers based on the correct answer type\nif(data.rechargeTime.unit==\"s\"&&Number(data.rechargeTime.amount)<=6){var additionalAnswers=shuffledArray(possibleAnswersSeconds);var correctAnswer=ChargeAnswer(data.rechargeTime.unit,data.rechargeTime.amount);additionalAnswers=additionalAnswers.filter(function(el){return el!=correctAnswer;});answers[2]=additionalAnswers[0];answers[3]=additionalAnswers[1];answers[4]=ChargeAnswer(data.rechargeTime.amount,data.rechargeTime.unit);answers=shuffledArray(answers);}else if(data.rechargeTime.unit==\"s\"&&Number(data.rechargeTime.amount)>=7){var _additionalAnswers=shuffledArray(possibleAnswersSecondsSpecial);var _correctAnswer=ChargeAnswer(data.rechargeTime.unit,data.rechargeTime.amount);_additionalAnswers=_additionalAnswers.filter(function(el){return el!=_correctAnswer;});answers[2]=_additionalAnswers[0];answers[3]=_additionalAnswers[1];answers[4]=ChargeAnswer(data.rechargeTime.amount,data.rechargeTime.unit);answers=shuffledArray(answers);}else if(data.rechargeTime.unit==\"rooms\"){var _correctAnswer2=ChargeAnswer(data.rechargeTime.amount,data.rechargeTime.unit);var _additionalAnswers2=shuffledArray(possibleAnswersRooms);_additionalAnswers2=_additionalAnswers2.filter(function(el){return el!=_correctAnswer2;});answers[2]=_additionalAnswers2[0];answers[3]=_additionalAnswers2[1];answers[4]=_correctAnswer2;answers=shuffledArray(answers);}else{var _additionalAnswers3=shuffledArray(possibleAnswersRooms);answers[2]=_additionalAnswers3[0];answers[3]=_additionalAnswers3[1];answers[4]=_additionalAnswers3[2];answers=shuffledArray(answers);}var question={question:/*#__PURE__*/_jsx(ChargeQuestion,{itemName:data.name}),correctAnswer:ChargeAnswer(data.rechargeTime.amount,data.rechargeTime.unit),answers:answers};resolve(question);});}if(questionType==QuestionType.CharacterUnlockQuestion){var _itemId2=Math.floor(Math.random()*itemsAmount);var characters=[\"Isaac\",\"Magdalene\",\"Cain\",\"Judas\",\"???\",\"Eve\",\"Samson\",\"Azazel\",\"Lazarus\",\"Eden\",\"The Lost\",\"Lilith\",\"Keeper\",\"Apollyon\",\"The Forgotten\",\"Bethany\",\"Jacob and Esau\",\"Tainted Isaac\",\"Tainted Magdalene\",\"Tainted Cain\",\"Tainted Judas\",\"Tainted ???\",\"Tainted Eve\",\"Tainted Samson\",\"Tainted Azazel\",\"Tainted Lazarus\",\"Tainted Eden\",\"Tainted Lost\",\"Tainted Lilith\",\"Tainted Keeper\",\"Tainted Apollyon\",\"Tainted Forgotten\",\"Tainted Bethany\",\"Tainted Jacob\"];var properItemFound=false;var correctAnswer;var _itemName;while(!properItemFound){var checkedItem=items[Math.floor(Math.random()*itemsAmount)];if(checkedItem.unlock&&checkedItem.unlock.character){properItemFound=true;correctAnswer=checkedItem.unlock.character;_itemName=checkedItem.name;}}var charactersWithoutCorrect=characters.filter(function(el){return el!=correctAnswer;});charactersWithoutCorrect=shuffledArray(charactersWithoutCorrect);var answers=[correctAnswer,charactersWithoutCorrect[0],charactersWithoutCorrect[1],charactersWithoutCorrect[2],charactersWithoutCorrect[3]];answers=shuffledArray(answers);var _question={question:/*#__PURE__*/_jsx(CharacterUnlockQuestion,{itemName:_itemName}),correctAnswer:correctAnswer,answers:answers};resolve(_question);}if(questionType==QuestionType.ItemDescriptionQuestion){var _answers=[];var _itemName2;while(_answers.length<5){var item=items[Math.floor(Math.random()*itemsAmount)];_answers.push(item.quote);_itemName2=item.name;}var _correctAnswer3=_answers[4];_answers=shuffledArray(_answers);var _question2={question:/*#__PURE__*/_jsx(ItemDescriptionQuestion,{itemName:_itemName2}),correctAnswer:_correctAnswer3,answers:_answers};resolve(_question2);}});}function generateMultipleQuestions(_x){return _generateMultipleQuestions.apply(this,arguments);}function _generateMultipleQuestions(){_generateMultipleQuestions=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(questionAmount){var questions,i,question;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:questions=[];i=0;case 2:if(!(i<questionAmount)){_context.next=10;break;}_context.next=5;return generateQuestion();case 5:question=_context.sent;questions.push(question);case 7:i++;_context.next=2;break;case 10:return _context.abrupt(\"return\",questions);case 11:case\"end\":return _context.stop();}}},_callee);}));return _generateMultipleQuestions.apply(this,arguments);}export{generateQuestion,generateMultipleQuestions};","map":{"version":3,"sources":["/home/programowanie/isaacQuiz/isaac-quiz/src/Quiz/generateQuestion.js"],"names":["React","QualityQuestion","ChargeQuestion","CharacterUnlockQuestion","ItemDescriptionQuestion","QuestionType","ChargeAnswer","amount","unit","answer","toUpperCase","slice","shuffledArray","array","newArray","i","length","j","Math","floor","random","temp","items","apiUrl","fetch","then","response","json","data","generateQuestion","Promise","resolve","reject","itemsAmount","activeItemIds","possibleAnswersSeconds","possibleAnswersSecondsSpecial","possibleAnswersRooms","questionType","Object","keys","itemId","itemName","name","itemQuality","quality","question","correctAnswer","answers","rechargeTime","Number","additionalAnswers","filter","el","characters","properItemFound","checkedItem","unlock","character","charactersWithoutCorrect","item","push","quote","generateMultipleQuestions","questionAmount","questions"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {QualityQuestion, ChargeQuestion, CharacterUnlockQuestion, ItemDescriptionQuestion} from \"./Questions/questionsComponents\";\nimport QuestionType from \"./enum\";\n\n// Charge question answer formatting\nfunction ChargeAnswer(amount, unit = \"\") {\n  let answer = `${amount} ${unit}`;\n  answer = answer[0].toUpperCase() + answer.slice(1);\n  return answer;\n}\nfunction shuffledArray(array) {\n  let newArray = [...array];\n  for (let i = newArray.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = newArray[i];\n      newArray[i] = newArray[j];\n      newArray[j] = temp;\n  }\n  return newArray;\n}\n\nlet items;\nlet apiUrl = \"\"\nfetch(`${apiUrl}/api/items`)\n.then(response => response.json())\n.then(data => {\n      items = data;\n    }\n);\n\nfunction generateQuestion() {\n    return new Promise((resolve, reject) => {\n        // 718 items as of now\n        let itemsAmount = 718\n        let activeItemIds = [33,34,35,36,37,38,39,40,41,42,44,45,47,49,56,58,65,66,77,78,83,84,85,86,93,97,102,105,107,111,123,124,126,127,130,133,135,136,137,145,146,158,160,164,166,171,175,177,181,186,192,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,323,324,325,326,338,347,348,349,351,352,357,382,383,386,396,406,419,422,427,434,437,439,441,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,504,507,508,510,512,515,516,521,522,523,527,536,540,545,549,550,552,555,556,557,577,578,580,584,585,604,605,609,611,622,623,625,628,631,635,636,639,640,642,650,653,655,685,687,703,705,706,709,710,711,712,713,714,715,719,720,722,723,728,729];\n          let possibleAnswersSeconds = [\n            ChargeAnswer(1,\"s\"),\n            ChargeAnswer(2,\"s\"),\n            ChargeAnswer(3,\"s\"),\n            ChargeAnswer(4,\"s\"),\n            ChargeAnswer(6,\"s\")\n          ];\n          let possibleAnswersSecondsSpecial = [\n            ChargeAnswer(7,\"s\"),\n            ChargeAnswer(10,\"s\"),\n            ChargeAnswer(15,\"s\"),\n            ChargeAnswer(16,\"s\"),\n          ];\n          let possibleAnswersRooms = [\n            ChargeAnswer(1,\"rooms\"),\n            ChargeAnswer(2,\"rooms\"),\n            ChargeAnswer(3,\"rooms\"),\n            ChargeAnswer(4,\"rooms\"),\n            ChargeAnswer(6,\"rooms\"),\n            ChargeAnswer(12,\"rooms\"),\n          ];\n        // Get random question type\n        let questionType = Math.floor(Object.keys(QuestionType).length * Math.random())\n        \n        // Quality Questions\n        if(questionType == QuestionType.QualityQuestion) {\n          let itemId = Math.floor(Math.random() * itemsAmount);\n          let itemName = items[itemId].name;\n          let itemQuality = items[itemId].quality\n            let question = {\n              question: <QualityQuestion itemName={itemName}></QualityQuestion>,\n              correctAnswer: itemQuality,\n              answers: [0,1,2,3,4]\n            }\n            resolve(question);\n        }\n        // Charge Questions\n        // TO BE REFACTORISED, THE CODE IS AWFUL RIGHT NOW\n        if(questionType == QuestionType.ChargeQuestion) {\n          let itemId = activeItemIds[Math.floor(Math.random() * activeItemIds.length)]\n          fetch(`${apiUrl}/api/items/${itemId}`)\n          .then(response => response.json())\n          .then(data => {\n            let answers = [ChargeAnswer(\"unlimited\"), ChargeAnswer(\"one time use\")]\n            // Randomise different sets of answers based on the correct answer type\n            if(data.rechargeTime.unit == \"s\" && Number(data.rechargeTime.amount) <= 6) {\n              let additionalAnswers = shuffledArray(possibleAnswersSeconds);\n              let correctAnswer = ChargeAnswer(data.rechargeTime.unit, data.rechargeTime.amount);\n              additionalAnswers = additionalAnswers.filter((el) => {\n                return el != correctAnswer\n              })\n              answers[2] = additionalAnswers[0];\n              answers[3] = additionalAnswers[1];\n              answers[4] = ChargeAnswer(data.rechargeTime.amount, data.rechargeTime.unit);\n              answers = shuffledArray(answers);\n            }\n            else if(data.rechargeTime.unit == \"s\" && Number(data.rechargeTime.amount) >= 7) {\n              let additionalAnswers = shuffledArray(possibleAnswersSecondsSpecial);\n              let correctAnswer = ChargeAnswer(data.rechargeTime.unit, data.rechargeTime.amount);\n              additionalAnswers = additionalAnswers.filter((el) => {return el != correctAnswer})\n              answers[2] = additionalAnswers[0];\n              answers[3] = additionalAnswers[1];\n              answers[4] = ChargeAnswer(data.rechargeTime.amount, data.rechargeTime.unit);\n              answers = shuffledArray(answers);\n            }\n            else if(data.rechargeTime.unit == \"rooms\") {\n              let correctAnswer = ChargeAnswer(data.rechargeTime.amount, data.rechargeTime.unit);\n              let additionalAnswers = shuffledArray(possibleAnswersRooms);\n              additionalAnswers = additionalAnswers.filter((el) => {return el != correctAnswer})\n              answers[2] = additionalAnswers[0];\n              answers[3] = additionalAnswers[1];\n              answers[4] = correctAnswer;\n              answers = shuffledArray(answers);\n            }\n            else {\n              let additionalAnswers = shuffledArray(possibleAnswersRooms);\n              answers[2] = additionalAnswers[0];\n              answers[3] = additionalAnswers[1];\n              answers[4] = additionalAnswers[2];\n              answers = shuffledArray(answers);\n            }\n            let question = {\n              question: <ChargeQuestion itemName={data.name}></ChargeQuestion>,\n              correctAnswer: ChargeAnswer(data.rechargeTime.amount, data.rechargeTime.unit),\n              answers: answers\n            }\n            resolve(question);\n          });\n        }\n        if(questionType == QuestionType.CharacterUnlockQuestion) {\n          let itemId = Math.floor(Math.random() * itemsAmount);\n          let characters = [\n            \"Isaac\",\n            \"Magdalene\",\n            \"Cain\",\n            \"Judas\",\n            \"???\",\n            \"Eve\",\n            \"Samson\",\n            \"Azazel\",\n            \"Lazarus\",\n            \"Eden\",\n            \"The Lost\",\n            \"Lilith\",\n            \"Keeper\",\n            \"Apollyon\",\n            \"The Forgotten\",\n            \"Bethany\",\n            \"Jacob and Esau\",\n            \"Tainted Isaac\",\n            \"Tainted Magdalene\",\n            \"Tainted Cain\",\n            \"Tainted Judas\",\n            \"Tainted ???\",\n            \"Tainted Eve\",\n            \"Tainted Samson\",\n            \"Tainted Azazel\",\n            \"Tainted Lazarus\",\n            \"Tainted Eden\",\n            \"Tainted Lost\",\n            \"Tainted Lilith\",\n            \"Tainted Keeper\",\n            \"Tainted Apollyon\",\n            \"Tainted Forgotten\",\n            \"Tainted Bethany\",\n            \"Tainted Jacob\",\n          ];\n          let properItemFound = false;\n          let correctAnswer;\n          let itemName;\n          while(!properItemFound) {\n            let checkedItem = items[Math.floor(Math.random() * itemsAmount)];\n            if(checkedItem.unlock && checkedItem.unlock.character) {\n              properItemFound = true;\n              correctAnswer = checkedItem.unlock.character;\n              itemName = checkedItem.name;\n            }\n          }\n          let charactersWithoutCorrect = characters.filter(el => {return el != correctAnswer});\n          charactersWithoutCorrect = shuffledArray(charactersWithoutCorrect);\n          let answers = [\n            correctAnswer,\n            charactersWithoutCorrect[0],\n            charactersWithoutCorrect[1],\n            charactersWithoutCorrect[2],\n            charactersWithoutCorrect[3],\n          ]\n          answers = shuffledArray(answers);\n            let question = {\n              question: <CharacterUnlockQuestion itemName={itemName}></CharacterUnlockQuestion>,\n              correctAnswer: correctAnswer,\n              answers: answers\n            }\n            resolve(question);\n        }\n        if(questionType == QuestionType.ItemDescriptionQuestion) {\n          let answers = [];\n          let itemName;\n          while(answers.length < 5) {\n            let item = items[Math.floor(Math.random() * itemsAmount)];\n            answers.push(item.quote);\n            itemName = item.name;\n          }\n          let correctAnswer = answers[4];\n          answers = shuffledArray(answers);\n\n          let question = {\n            question: <ItemDescriptionQuestion itemName={itemName}></ItemDescriptionQuestion>,\n            correctAnswer: correctAnswer,\n            answers: answers\n          }\n          resolve(question);\n        }\n      })\n}\nasync function generateMultipleQuestions(questionAmount) {\n  let questions = []\n  for(let i = 0; i < questionAmount; i++) {\n    let question = await generateQuestion()\n    questions.push(question)\n  }\n  return questions;\n}\n\nexport {generateQuestion, generateMultipleQuestions};"]},"metadata":{},"sourceType":"module"}