{"ast":null,"code":"import _objectSpread from\"/home/programowanie/isaacQuiz/isaac-quiz/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/home/programowanie/isaacQuiz/isaac-quiz/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"/home/programowanie/isaacQuiz/isaac-quiz/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/programowanie/isaacQuiz/isaac-quiz/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/home/programowanie/isaacQuiz/isaac-quiz/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/home/programowanie/isaacQuiz/isaac-quiz/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/programowanie/isaacQuiz/isaac-quiz/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import{QualityQuestion}from'./Questions/questionsComponents.js';import QualityQuestionData from'./quizData.js';import QuestionType from'./enum.js';import{generateQuestion,generateMultipleQuestions}from'./generateQuestion.js';import Answers from'./Answers.js';import StartView from'../StartView.js';import Summary from'../Summary/Summary.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Quiz=/*#__PURE__*/function(_Component){_inherits(Quiz,_Component);var _super=_createSuper(Quiz);function Quiz(props){var _this;_classCallCheck(this,Quiz);_this=_super.call(this,props);_this.state={quizStarted:false,currentQuestion:0,questions:[],loading:false};_this.startFunc=_this.startFunc.bind(_assertThisInitialized(_this));_this.answer=_this.answer.bind(_assertThisInitialized(_this));_this.endQuiz=_this.endQuiz.bind(_assertThisInitialized(_this));return _this;}_createClass(Quiz,[{key:\"startFunc\",value:function startFunc(){var _this2=this;var questionsAmount=arguments.length>0&&arguments[0]!==undefined?arguments[0]:15;// Start the loading animation\nthis.setState({loading:true});// Generate the questions\ngenerateMultipleQuestions(questionsAmount).then(function(questions){console.log(questions);_this2.setState({loading:false,quizStarted:true,quizFinished:false,questions:questions});console.log(_this2.state.questions);});}},{key:\"answer\",value:function answer(correct){var _this3=this;if(correct){// Add an answered correctly flag to the current question\nvar newQuestions=_toConsumableArray(this.state.questions);newQuestions[this.state.currentQuestion].answeredCorrectly=true;this.setState({questions:newQuestions});}// Move to the next question, fade out and in\n// Similiar function in Answers Component\nvar fadeDelay=500;var totalDelay=fadeDelay+700;document.getElementById(\"quiz\").style.pointerEvents=\"none\";setTimeout(function(){document.getElementById(\"quiz\").style.opacity=0;},fadeDelay);setTimeout(function(){if(!_this3.state.questions[_this3.state.currentQuestion+1]){_this3.endQuiz();}else{_this3.setState({currentQuestion:_this3.state.currentQuestion+1});}document.getElementById(\"quiz\").style.opacity=\"100%\";document.getElementById(\"quiz\").style.pointerEvents=\"auto\";},totalDelay);}},{key:\"endQuiz\",value:function endQuiz(){this.setState({quizStarted:false,quizFinished:true});// The array that contains objects with a question type, the number of correct answers from that type and total answers from that type \nvar summary=[];console.log(this.state.questions);this.state.questions.forEach(function(question){// question.question is the component with the formatted question\nconsole.log(question.question);var questionType=question.question.type.name;var summaryIndex=null;// Get the summary entry object with the matching question type\nsummary.forEach(function(question,i){if(question.questionType==questionType)summaryIndex=i;});// Apply changes to summary\nif(summaryIndex!==null){if(question.answeredCorrectly)summary[summaryIndex].correctAnswers+=1;summary[summaryIndex].totalAnswers+=1;}else{var correctAnswers=0;if(question.answeredCorrectly)correctAnswers=1;var summaryObject={questionType:questionType,correctAnswers:correctAnswers,totalAnswers:1};summary.push(summaryObject);}console.log(summary);});// Change the questionType properties to more readable ones for displaying in the summary\nsummary.forEach(function(el){el.questionType=el.questionType.replace(/([A-Z])/g,' $1').trim();});this.setState({summary:summary,questions:[],currentQuestion:0});}},{key:\"render\",value:function render(){var currentQuestion=_objectSpread({},this.state.questions[this.state.currentQuestion]);console.log(this.state);return/*#__PURE__*/_jsxs(\"div\",{id:\"quiz\",children:[this.state.quizStarted&&/*#__PURE__*/_jsxs(_Fragment,{children:[currentQuestion.question,/*#__PURE__*/_jsx(Answers,{answers:currentQuestion.answers,correctAnswer:currentQuestion.correctAnswer,answerFunc:this.answer})]}),!this.state.quizStarted&&!this.state.summary&&/*#__PURE__*/_jsx(StartView,{startFunc:this.startFunc,loading:this.state.loading}),this.state.summary&&/*#__PURE__*/_jsx(Summary,{summary:this.state.summary})]});}}]);return Quiz;}(Component);export{Quiz as default};","map":{"version":3,"sources":["/home/programowanie/isaacQuiz/isaac-quiz/src/Quiz/Quiz.js"],"names":["React","Component","QualityQuestion","QualityQuestionData","QuestionType","generateQuestion","generateMultipleQuestions","Answers","StartView","Summary","Quiz","props","state","quizStarted","currentQuestion","questions","loading","startFunc","bind","answer","endQuiz","questionsAmount","setState","then","console","log","quizFinished","correct","newQuestions","answeredCorrectly","fadeDelay","totalDelay","document","getElementById","style","pointerEvents","setTimeout","opacity","summary","forEach","question","questionType","type","name","summaryIndex","i","correctAnswers","totalAnswers","summaryObject","push","el","replace","trim","answers","correctAnswer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {QualityQuestion} from './Questions/questionsComponents.js';\nimport QualityQuestionData from './quizData.js';\nimport QuestionType from './enum.js';\nimport {generateQuestion, generateMultipleQuestions} from './generateQuestion.js';\nimport Answers from './Answers.js';\nimport StartView from '../StartView.js';\nimport Summary from '../Summary/Summary.js';\n\nexport default class Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quizStarted: false,\n      currentQuestion: 0,\n      questions: [],\n      loading: false\n    };\n    \n    this.startFunc = this.startFunc.bind(this);\n    this.answer = this.answer.bind(this);\n    this.endQuiz = this.endQuiz.bind(this);\n    \n  }\n  startFunc(questionsAmount = 15) {\n    // Start the loading animation\n    this.setState({loading: true});\n    // Generate the questions\n    generateMultipleQuestions(questionsAmount).then(questions => {\n      console.log(questions)\n      this.setState({\n        loading: false,\n        quizStarted: true,\n        quizFinished: false,\n        questions: questions\n      })\n      console.log(this.state.questions)\n    })\n  }\n  answer(correct) {\n    if(correct) {\n      // Add an answered correctly flag to the current question\n        let newQuestions = [...this.state.questions];\n        newQuestions[this.state.currentQuestion].answeredCorrectly = true;\n        this.setState({\n          questions: newQuestions\n        })\n    }\n  // Move to the next question, fade out and in\n  // Similiar function in Answers Component\n  const fadeDelay = 500;\n  const totalDelay = fadeDelay + 700;\n  document.getElementById(\"quiz\").style.pointerEvents = \"none\";\n    setTimeout(() => {\n      document.getElementById(\"quiz\").style.opacity = 0;\n    }, fadeDelay);\n    \n    setTimeout(() => {\n      if(!this.state.questions[this.state.currentQuestion + 1]) {\n        this.endQuiz();\n      }\n      else {\n        this.setState({\n          currentQuestion: this.state.currentQuestion + 1\n        });\n      }\n      document.getElementById(\"quiz\").style.opacity = \"100%\";\n      document.getElementById(\"quiz\").style.pointerEvents = \"auto\";\n      \n    }, totalDelay)\n    \n  }\n  endQuiz() {\n    this.setState({\n      quizStarted: false,\n      quizFinished: true\n    });\n    // The array that contains objects with a question type, the number of correct answers from that type and total answers from that type \n    let summary = [];\n\n    console.log(this.state.questions);\n    this.state.questions.forEach((question) => {\n      // question.question is the component with the formatted question\n      console.log(question.question);\n      let questionType = question.question.type.name;\n      let summaryIndex = null;\n      // Get the summary entry object with the matching question type\n      summary.forEach((question,i) => {\n        if(question.questionType == questionType) summaryIndex = i;\n      });\n\n      // Apply changes to summary\n      if(summaryIndex !== null) {\n        if(question.answeredCorrectly) summary[summaryIndex].correctAnswers += 1;\n        summary[summaryIndex].totalAnswers += 1;\n      }\n      else {\n        let correctAnswers = 0;\n        if(question.answeredCorrectly) correctAnswers = 1;\n        let summaryObject = {\n          questionType: questionType,\n          correctAnswers: correctAnswers,\n          totalAnswers: 1\n        };\n        summary.push(summaryObject)\n      }\n      console.log(summary);\n      \n    })\n    \n    // Change the questionType properties to more readable ones for displaying in the summary\n    summary.forEach((el) => {\n      el.questionType = el.questionType.replace(/([A-Z])/g, ' $1').trim();\n    })\n    this.setState({\n      summary: summary,\n      questions: [],\n      currentQuestion: 0\n    })\n  }\n  render() {\n    let currentQuestion = {...this.state.questions[this.state.currentQuestion]};\n    console.log(this.state)\n    return (\n      <div id=\"quiz\">\n      {\n      (this.state.quizStarted) &&\n      <>\n        {currentQuestion.question}\n        <Answers \n        answers={currentQuestion.answers}\n        correctAnswer={currentQuestion.correctAnswer}\n        answerFunc={this.answer}\n        ></Answers>\n      </>\n      }\n      {\n      (!this.state.quizStarted && !this.state.summary) &&\n      <StartView\n        startFunc={this.startFunc}\n        loading={this.state.loading}\n      ></StartView>\n      }\n\n      {this.state.summary && <Summary summary={this.state.summary}></Summary>}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}